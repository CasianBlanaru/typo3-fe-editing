# Include Bootstrap Package setup
@import 'EXT:bootstrap_package/Configuration/TypoScript/setup.typoscript'

# Include FE Editor Extension when installed
@import 'EXT:pixelcoda_fe_editor/Configuration/TypoScript/setup.typoscript'

# Custom configuration
page {
    # Include custom CSS
    includeCSS {
        fe_editor_sitepackage = EXT:fe_editor_sitepackage/Resources/Public/Css/custom.css
        pixelcoda_fe_editor = EXT:pixelcoda_fe_editor/Resources/Public/editor.css
    }
    
    # Include custom JavaScript with inline toolbar
    includeJSFooter {
        fe_editor_sitepackage = EXT:fe_editor_sitepackage/Resources/Public/JavaScript/custom.js
        pixelcoda_fe_editor = EXT:pixelcoda_fe_editor/Resources/Public/editor.js
    }
    
    # Direct JavaScript injection
    jsFooterInline.10 = TEXT
    jsFooterInline.10.value (
// PixelCoda Frontend Editor - Direct Injection
(function() {
    const css = '.pc-fe-toolbar{position:fixed;right:1rem;bottom:1rem;padding:.5rem;background:#111827;color:#F9FAFB;border-radius:.5rem;z-index:99999;font:14px/1.2 system-ui;box-shadow:0 10px 25px rgba(0,0,0,.25);display:flex;gap:.5rem}.pc-fe-editable{outline:2px dashed rgba(14,165,233,.5);outline-offset:2px}.btn{width:32px;height:32px;display:inline-flex;align-items:center;justify-content:center;border-radius:6px;background:transparent;border:none;cursor:pointer;transition:all .2s;color:white;font-size:16px}.btn:hover{background:rgba(255,255,255,.1)}.btn.active{background:#0EA5E9}';
    const style = document.createElement('style');
    style.textContent = css;
    document.head.appendChild(style);
    
    const toolbar = document.createElement('div');
    toolbar.id = 'pc-fe-toolbar-root';
    toolbar.className = 'pc-fe-toolbar';
    toolbar.innerHTML = '<button id="pc-edit-toggle" class="btn" title="Bearbeiten">‚úèÔ∏è</button><button id="pc-ai" class="btn" title="KI">ü§ñ</button><button id="pc-add-global" class="btn" title="Element hinzuf√ºgen">‚ûï</button>';
    document.body.appendChild(toolbar);
    
    let editMode = false;
    function setEditable(on) {
        document.querySelectorAll('h1, h2, h3, h4, h5, h6, p, div').forEach(el => {
            if (el.closest('.pc-fe-toolbar') || el.closest('nav') || el.closest('footer')) return;
            if (on) {
                el.contentEditable = 'true';
                el.classList.add('pc-fe-editable');
            } else {
                el.contentEditable = 'false';
                el.classList.remove('pc-fe-editable');
            }
        });
    }
    
    document.addEventListener('click', function(e) {
        if (e.target.closest('#pc-edit-toggle')) {
            editMode = !editMode;
            setEditable(editMode);
            e.target.closest('#pc-edit-toggle').classList.toggle('active', editMode);
            alert(editMode ? '‚úèÔ∏è Edit-Modus aktiviert!' : '‚úèÔ∏è Edit-Modus deaktiviert!');
        }
        if (e.target.closest('#pc-ai')) {
            if (editMode) {
                const first = document.querySelector('.pc-fe-editable');
                if (first) first.innerHTML = 'ü§ñ ' + first.innerHTML;
                alert('ü§ñ KI-Vorschlag hinzugef√ºgt!');
            } else {
                alert('ü§ñ Aktivieren Sie zuerst den Edit-Modus!');
            }
        }
        if (e.target.closest('#pc-add-global')) {
            alert('‚ûï Demo: Neues Element w√ºrde erstellt!');
        }
    });
    
    document.addEventListener('focusout', function(e) {
        if (e.target.classList.contains('pc-fe-editable') && editMode) {
            alert('üíæ √Ñnderungen w√ºrden gespeichert!');
        }
    });
    
    console.log('üöÄ PixelCoda Toolbar injected!');
})();
    )
    
    # Meta tags
    meta {
        description = FE Editor Demo - Live Frontend Editing for TYPO3
        author = pixelcoda
        viewport = width=device-width, initial-scale=1
    }
    
    # Frontend Editing Toolbar (always visible for demo)
    footerData.10 = TEXT
    footerData.10.value (
        <link rel="stylesheet" href="/editor.css">
        <div id="pc-fe-toolbar-root" class="pc-fe-toolbar">
            <button id="pc-edit-toggle" class="btn" title="Bearbeiten">‚úèÔ∏è</button>
            <button id="pc-ai" class="btn" title="KI">ü§ñ</button>
            <button id="pc-add-global" class="btn" title="Element hinzuf√ºgen">‚ûï</button>
        </div>
        <script>
            window.TYPO3 = window.TYPO3 || { settings: {}, security: {} };
            window.TYPO3.settings.ajaxUrls = window.TYPO3.settings.ajaxUrls || {};
            window.TYPO3.settings.ajaxUrls['fe_editor_save'] = '/typo3/ajax/fe-editor/save';
            window.TYPO3.security.csrfToken = 'demo-token';
            window.demoMode = true;
        </script>
        <script src="/editor.js"></script>
        <script>
            // Demo Mode Overrides
            window.saveField = async function(data) {
                console.log('üéØ TYPO3 Demo: Saving field', data);
                alert('TYPO3 Demo: Feld "' + data.field + '" w√ºrde gespeichert werden!');
                return { ok: true };
            };
            window.createContentElement = async function(pid, colPos) {
                console.log('üéØ TYPO3 Demo: Creating element', { pid, colPos });
                alert('TYPO3 Demo: Neues Element w√ºrde erstellt werden!');
                return { ok: true };
            };
        </script>
    )
}

# Override content element templates for frontend editing
lib.contentElement {
    templateRootPaths.200 = EXT:fe_editor_sitepackage/Resources/Private/Templates/ContentElements/
}

# Enable DropIn Partials for Bootstrap Package
page.10 {
    partialRootPaths.200 = EXT:fe_editor_sitepackage/Resources/Private/Partials/
}

# Override page layout for frontend editing
page {
    10 {
        layoutRootPaths.200 = EXT:fe_editor_sitepackage/Resources/Private/Layouts/
    }
}
